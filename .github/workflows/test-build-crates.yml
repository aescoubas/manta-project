name: Check changed files and release

on:
  push:
    branches:
      - '**'  # Run on all branches for push
    paths:
      - 'crates/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
  pull_request:
    branches:
      - 'staging'
      - 'main'
    paths:
      - 'crates/**'
      - 'Cargo.toml'
      - 'Cargo.lock'

permissions:
  contents: write  # Required for creating releases

jobs:
  changed_files:
    runs-on: ubuntu-latest
    name: Detect changed files
    outputs:
      manta_any_changed: ${{ steps.changed-files-yaml.outputs.manta_any_changed }}
      manta_all_changed_files: ${{ steps.changed-files-yaml.outputs.manta_all_changed_files }}
      manta_backend_dispatcher_any_changed: ${{ steps.changed-files-yaml.outputs.manta_backend_dispatcher_any_changed }}
      manta_backend_dispatcher_all_changed_files: ${{ steps.changed-files-yaml.outputs.manta_backend_dispatcher_all_changed_files }}
      manta_ws_any_changed: ${{ steps.changed-files-yaml.outputs.manta_ws_any_changed }}
      manta_ws_all_changed_files: ${{ steps.changed-files-yaml.outputs.manta_ws_all_changed_files }}
      ochami_rs_any_changed: ${{ steps.changed-files-yaml.outputs.ochami_rs_any_changed }}
      ochami_rs_all_changed_files: ${{ steps.changed-files-yaml.outputs.ochami_rs_all_changed_files }}
      csm_rs_any_changed: ${{ steps.changed-files-yaml.outputs.csm_rs_any_changed }}
      csm_rs_all_changed_files: ${{ steps.changed-files-yaml.outputs.csm_rs_all_changed_files }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0  # Required for changed-files to compare commits

      - name: Get changed files
        id: changed-files-yaml
        uses: tj-actions/changed-files@v46
        with:
          files_yaml: |
            manta:
              - crates/manta/**
            manta_backend_dispatcher:
              - crates/manta-backend-dispatcher/**
            manta_ws:
              - crates/manta-ws/**
            ochami_rs:
              - crates/ochami-rs/**
            csm_rs:
              - crates/csm-rs/**

      - name: Debug changed files outputs
        run: |
          echo "manta_all_changed_files: ${{ steps.changed-files-yaml.outputs.manta_all_changed_files }}"
          echo "manta_any_changed: ${{ steps.changed-files-yaml.outputs.manta_any_changed }}"
          echo "all_changed_files: ${{ steps.changed-files-yaml.outputs.all_changed_files }}"

      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files-yaml.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

  test_crates:
    needs: changed_files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate:
          - name: manta
            path: crates/manta
            output_prefix: manta
          - name: manta-backend-dispatcher
            path: crates/manta-backend-dispatcher
            output_prefix: manta_backend_dispatcher
          - name: manta-ws
            path: crates/manta-ws
            output_prefix: manta_ws
          - name: ochami-rs
            path: crates/ochami-rs
            output_prefix: ochami_rs
          - name: csm-rs
            path: crates/csm-rs
            output_prefix: csm_rs
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Test ${{ matrix.crate.name }}
        if: ${{ needs.changed_files.outputs[format('{0}_any_changed', matrix.crate.output_prefix)] == 'true' }}
        run: |
          cd ${{ matrix.crate.path }} && cargo test

  build_crates:
    needs: test_crates
    # Run for push to staging/main or pull requests targeting staging/main
    if: |
      github.event_name == 'push' && (github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main') ||
      github.event_name == 'pull_request' && (github.base_ref == 'refs/heads/staging' || github.base_ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate:
          - name: manta
            path: crates/manta
            output_prefix: manta
          - name: manta-backend-dispatcher
            path: crates/manta-backend-dispatcher
            output_prefix: manta_backend_dispatcher
          - name: manta-ws
            path: crates/manta-ws
            output_prefix: manta_ws
          - name: ochami-rs
            path: crates/ochami-rs
            output_prefix: ochami_rs
          - name: csm-rs
            path: crates/csm-rs
            output_prefix: csm_rs
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Build ${{ matrix.crate.name }}
        if: ${{ needs.changed_files.outputs[format('{0}_any_changed', matrix.crate.output_prefix)] == 'true' }}
        run: |
          cd ${{ matrix.crate.path }} && cargo build --release

      - name: Upload artifacts
        if: ${{ needs.changed_files.outputs[format('{0}_any_changed', matrix.crate.output_prefix)] == 'true' && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.crate.name }}-binary
          path: ${{ matrix.crate.path }}/target/release/${{ matrix.crate.name }}

  release:
    needs: build_crates
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Create GitHub Release
        id: create_release
        uses: taiki-e/create-gh-release-action@v1
        with:
          changelog: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
          title: Release ${{ github.sha }}
          body: |
            Automated release for commit ${{ github.sha }}.
            See CHANGELOG.md for details.

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Upload binaries to release
        run: |
          for artifact in artifacts/*/*; do
            gh release upload ${{ steps.create_release.outputs.tag }} "$artifact" --repo ${{ github.repository }}
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
