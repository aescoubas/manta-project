name: Check changed files and release

env:
  CONTAINER_REGISTRY: ghcr.io

on:
  workflow_dispatch:
    inputs:
      release_level:
        description: 'Release level'
        required: true
        type: choice
        default: 'patch'
        options:
          - patch
          - minor
          - major
  push:
    branches:
      - 'main'
      - 'staging'
    tags:
      - 'manta-v*'
      - 'manta-ws-v*'
    paths:
      - 'crates/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
  pull_request:
    branches:
      - 'staging'
      - 'main'
    paths:
      - 'crates/**'
      - 'Cargo.toml'
      - 'Cargo.lock'

permissions:
  contents: write

jobs:
  changed_files:
    runs-on: ubuntu-latest
    outputs:
      crates_changed: ${{ toJson(steps.changed-files-yaml.outputs) }}  # Output all as JSON for easier parsing
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - id: changed-files-yaml
        uses: tj-actions/changed-files@v46
        with:
          files_yaml: |
            manta: crates/manta/**
            manta_backend_dispatcher: crates/manta-backend-dispatcher/**
            manta_ws: crates/manta-ws/**
            ochami_rs: crates/ochami-rs/**
            csm_rs: crates/csm-rs/**

  validate:
    needs: changed_files
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        crate:
          - { name: manta, path: crates/manta, output_prefix: manta, tag_prefix: manta- }
          - { name: manta-backend-dispatcher, path: crates/manta-backend-dispatcher, output_prefix: manta_backend_dispatcher, tag_prefix: manta-backend-dispatcher- }
          - { name: manta-ws, path: crates/manta-ws, output_prefix: manta_ws, tag_prefix: manta-ws- }
          - { name: ochami-rs, path: crates/ochami-rs, output_prefix: ochami_rs, tag_prefix: ochami-rs- }
          - { name: csm-rs, path: crates/csm-rs, output_prefix: csm_rs, tag_prefix: csm-rs- }
    if: ${{ fromJson(needs.changed_files.outputs.crates_changed)[matrix.crate.output_prefix .. '_any_changed'] == 'true' }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Rust
        id: install-rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy
      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: ${{ matrix.crate.path }}
      - name: Run Checks
        working-directory: ${{ matrix.crate.path }}
        run: |
          cargo fmt --check
          cargo clippy -- -D warnings
          cargo test

  build:
    needs: [changed_files, validate]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.changed_files.outputs.crates_changed) }}  # Dynamic matrix from changed files
    if: ${{ matrix.any_changed == 'true' }}  # Only run for changed crates
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: ${{ matrix.path }}
      - name: Build
        working-directory: ${{ matrix.path }}
        run: cargo build --locked --release
      - name: Upload Artifact
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-binary
          path: ${{ matrix.path }}/target/release/${{ matrix.name }}

  release:
    needs: [changed_files, build]
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ toJson(steps.release.outputs.tags) }}  # Collect all tags as JSON
    strategy:
      matrix:
        crate: ${{ fromJson(needs.changed_files.outputs.crates_changed) }}
    if: ${{ matrix.any_changed == 'true' && github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - run: cargo install cargo-smart-release --locked
      - name: Run Release
        id: release
        working-directory: ${{ matrix.path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cargo smart-release --no-changelog --skip-publish --execute --tag-prefix ${{ matrix.tag_prefix }}
          TAG=$(git describe --tags --abbrev=0)
          echo "tag=$TAG" >> $GITHUB_OUTPUT
      - name: Collect Tags
        id: collect
        run: echo "tags=${{ toJson(steps.release.outputs) }}" >> $GITHUB_OUTPUT  # Aggregate if multi

  github_release_and_container:
    needs: [build, release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate:
          - { name: manta-ws, artifact: manta-ws-binary, tag_prefix: manta-ws-v }  # Add others if needed
    if: contains(fromJson(needs.release.outputs.tags), matrix.crate.tag_prefix)  # Only if tagged
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.crate.artifact }}
          path: artifacts/
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.release.outputs.tag }}  # Match from outputs
          files: artifacts/${{ matrix.crate.name }}
      - name: Build and Push Container
        if: matrix.crate.name == 'manta-ws'  # Crate-specific
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login ${{ env.CONTAINER_REGISTRY }} -u ${{ github.actor }} --password-stdin
          cd crates/${{ matrix.crate.name }}
          podman build -t ${{ env.CONTAINER_REGISTRY }}/${{ github.repository_owner }}/${{ matrix.crate.name }}:${{ needs.release.outputs.tag }} .
          podman push ${{ env.CONTAINER_REGISTRY }}/${{ github.repository_owner }}/${{ matrix.crate.name }}:${{ needs.release.outputs.tag }}
