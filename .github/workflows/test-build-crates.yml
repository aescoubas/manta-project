name: Check changed files

on:
  push:
    branches:
      - '**'  # Run on all branches
    paths:
      - 'crates/**'   # Trigger on changes in crates directory
      - 'Cargo.toml'  # Trigger on workspace Cargo.toml changes
      - 'Cargo.lock'  # Trigger on lockfile changes
  pull_request:
    branches:
      - '**'
    paths:
      - 'crates/**'
      - 'Cargo.toml'

jobs:
  changed_files:
    runs-on: ubuntu-latest
    name: Test changed-files
    steps:
      - uses: actions/checkout@v4

      # Get changed files
      - name: Get changed files
        id: changed-files-yaml
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46
        with:
          files_yaml: |
            manta:
              - crates/manta/**
            manta_backend_dispatcher:
              - crates/manta-backend-dispatcher/**
            manta_ws:
              - crates/manta-ws/**
            ochami_rs:
              - crates/ochami-rs/**
            csm_rs:
              - crates/csm-rs/**

      # List all changed files
      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files-yaml.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

  build_crates:
    needs: changed_files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate:
          - name: manta
            path: crates/manta
            output_prefix: manta
          - name: manta-backend-dispatcher
            path: crates/manta-backend-dispatcher
            output_prefix: manta_backend_dispatcher
          - name: manta-ws
            path: crates/manta-ws
            output_prefix: manta_ws
          - name: ochami-rs
            path: crates/ochami-rs
            output_prefix: ochami_rs
          - name: csm-rs
            path: crates/csm-rs
            output_prefix: csm_rs
    steps:
      - uses: actions/checkout@v4

      # Set up Rust toolchain
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

            ## Cache Rust dependencies
            #- name: Cache cargo
            #  uses: Swatinem/rust-cache@v2

      # Build crate if changed
      - name: Test ${{ matrix.crate.name }}
        #if: needs.changed_files.outputs[${{ matrix.crate.output_prefix }}_any_changed] == 'true'
        if: format('needs.changed_files.outputs[{0}_any_changed]', matrix.crate.output_prefix) == 'true'
        env:
        run: |
          echo "File changed in ${{ matrix.crate.path }}/"
          cargo test ${{ matrix.crate.name }}

      # Build crate if changed
      - name: Build ${{ matrix.crate.name }}
        #if: needs.changed_files.outputs[${{ matrix.crate.output_prefix }}_any_changed] == 'true'
        if: format('needs.changed_files.outputs[{0}_any_changed]', matrix.crate.output_prefix) == 'true'
        env:
          #ALL_CHANGED_FILES: ${{ needs.changed_files.outputs[${{ matrix.crate.output_prefix }}_all_changed_files] }}
          ALL_CHANGED_FILES: ${{ format('needs.changed_files.outputs[{0}_all_changed_files]', matrix.crate.output_prefix) }}
            #ANY_CHANGED_FILES: ${{ needs.changed_files.outputs[${{ matrix.crate.output_prefix }}_any_changed] }}
          ANY_CHANGED_FILES: ${{ format('needs.changed_files.outputs[{0}_any_changed]', matrix.crate.output_prefix) }}
        run: |
          echo "File changed in ${{ matrix.crate.path }}/"
          echo ALL_CHANGED_FILES ${ALL_CHANGED_FILES}
          echo ANY_CHANGED_FILES ${ANY_CHANGED_FILES}
          cargo build ${{ matrix.crate.name }}
