name: Check changed files and release

on:
  push:
    branches:
      #- 'staging' # we don't trigger this on direct push to this
      - 'main'
    tags:
      - 'manta-v*'
      - 'manta-ws-v*'
    paths:
      - 'crates/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
  pull_request:
    branches:
      - 'staging'
      - 'main'
    paths:
      - 'crates/**'
      - 'Cargo.toml'
      - 'Cargo.lock'

permissions:
  contents: write  # Required for creating releases, committing changes, and pushing tags

jobs:
  changed_files:
    runs-on: ubuntu-latest
    name: Detect changed files
    outputs:
      manta_any_changed: ${{ steps.changed-files-yaml.outputs.manta_any_changed }}
      manta_all_changed_files: ${{ steps.changed-files-yaml.outputs.manta_all_changed_files }}
      manta_backend_dispatcher_any_changed: ${{ steps.changed-files-yaml.outputs.manta_backend_dispatcher_any_changed }}
      manta_backend_dispatcher_all_changed_files: ${{ steps.changed-files-yaml.outputs.manta_backend_dispatcher_all_changed_files }}
      manta_ws_any_changed: ${{ steps.changed-files-yaml.outputs.manta_ws_any_changed }}
      manta_ws_all_changed_files: ${{ steps.changed-files-yaml.outputs.manta_ws_all_changed_files }}
      ochami_rs_any_changed: ${{ steps.changed-files-yaml.outputs.ochami_rs_any_changed }}
      ochami_rs_all_changed_files: ${{ steps.changed-files-yaml.outputs.ochami_rs_all_changed_files }}
      csm_rs_any_changed: ${{ steps.changed-files-yaml.outputs.csm_rs_any_changed }}
      csm_rs_all_changed_files: ${{ steps.changed-files-yaml.outputs.csm_rs_all_changed_files }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0  # Required for changed-files to compare commits

      - name: Get changed files
        id: changed-files-yaml
        uses: tj-actions/changed-files@v46
        with:
          files_yaml: |
            manta:
              - crates/manta/**
            manta_backend_dispatcher:
              - crates/manta-backend-dispatcher/**
            manta_ws:
              - crates/manta-ws/**
            ochami_rs:
              - crates/ochami-rs/**
            csm_rs:
              - crates/csm-rs/**

      - name: Debug changed files outputs
        run: |
          echo "manta_all_changed_files: ${{ steps.changed-files-yaml.outputs.manta_all_changed_files }}"
          echo "manta_any_changed: ${{ steps.changed-files-yaml.outputs.manta_any_changed }}"
          echo "all_changed_files: ${{ steps.changed-files-yaml.outputs.all_changed_files }}"

      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files-yaml.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

	# check formatting at the workspace level
  # TODO: trigger if any changed
  check_formatting_workspace:
    continue-on-error: true  # FOR TESTING Allow this job to fail without stopping the workflow
    needs: changed_files
    runs-on: ubuntu-latest
    name: Check Rust code formatting
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt

      - name: Check formatting
        run: |
          cargo fmt --all --check


  test_workspace:
    continue-on-error: true  #FOR TESTING Allow this job to fail without stopping the workflow
    needs: changed_files
    runs-on: ubuntu-latest
    name: Test Rust workspace
      # if: |
      #   github.event_name == 'pull_request' &&
      #   github.event.pull_request.base.ref == 'staging' &&
      #   needs.changed_files.outputs.any_crate_changed == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Test workspace
        run: |
          cargo test --workspace


   # TODO: the testing should probably be all crates at the same time
#  test_crates:
#    needs: changed_files
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        crate:
#          - name: manta
#            path: crates/manta
#            output_prefix: manta
#          - name: manta-backend-dispatcher
#            path: crates/manta-backend-dispatcher
#            output_prefix: manta_backend_dispatcher
#          - name: manta-ws
#            path: crates/manta-ws
#            output_prefix: manta_ws
#          - name: ochami-rs
#            path: crates/ochami-rs
#            output_prefix: ochami_rs
#          - name: csm-rs
#            path: crates/csm-rs
#            output_prefix: csm_rs
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          submodules: recursive
#
#      - name: Install Rust
#        uses: dtolnay/rust-toolchain@stable
#        with:
#          toolchain: stable
#
#      - name: Test ${{ matrix.crate.name }}
#        if: ${{ needs.changed_files.outputs[format('{0}_any_changed', matrix.crate.output_prefix)] == 'true' }}
#        run: |
#          cd ${{ matrix.crate.path }} && cargo test
#

	# build all packages in workspace
#  build_workspace:
#    needs: changed_files
#    runs-on: ubuntu-latest
#    name: Build Rust workspace
#    if: |
#      github.event_name == 'pull_request' &&
#      github.event.pull_request.base.ref == 'staging' &&
#      needs.changed_files.outputs.any_crate_changed == 'true'
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          submodules: recursive
#
#      - name: Install Rust
#        uses: dtolnay/rust-toolchain@stable
#        with:
#          toolchain: stable
#
#      - name: Build workspace
#        run: |
#          cargo build --workspace

  # case #1: for testing that everything builds in pull request
  # case #2: for actually building the packages in the push to main
  # We need to rerun this when we build since this is when the github release artifacts are generated
  build_crates_workspace:
    continue-on-error: true  # FOR TESTING Allow this job to fail without stopping the workflow
    needs: [check_formatting_workspace, test_workspace]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate:
          - name: manta
            path: crates/manta
            output_prefix: manta
          - name: manta-backend-dispatcher
            path: crates/manta-backend-dispatcher
            output_prefix: manta_backend_dispatcher
          - name: manta-ws
            path: crates/manta-ws
            output_prefix: manta_ws
          - name: ochami-rs
            path: crates/ochami-rs
            output_prefix: ochami_rs
          - name: csm-rs
            path: crates/csm-rs
            output_prefix: csm_rs
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Build ${{ matrix.crate.name }}
        #if: ${{ needs.changed_files.outputs[format('{0}_any_changed', matrix.crate.output_prefix)] == 'true' }}
        run: |
          cargo build -p ${{ matrix.crate.name }} --release

      # TODO: maybe only upload the artifacts for the build that is necessary
      - name: Upload artifacts
        if: ${{ needs.changed_files.outputs[format('{0}_any_changed', matrix.crate.output_prefix)] == 'true' && github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.crate.name }}-binary
          path: target/release/${{ matrix.crate.name }}

  # this release will only release the relevant
  cargo_release:
    if: github.ref == 'refs/heads/main'
    needs: [changed_files, build_crates_workspace]
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.set-tag.outputs.tag_name }}
    strategy:
      matrix:
        crate:
          - name: manta
            path: crates/manta
            output_prefix: manta
            condition: ${{ needs.changed_files.outputs.manta_any_changed == 'true' }}
          - name: manta-ws
            path: crates/manta-ws
            output_prefix: manta_ws
            condition: ${{ needs.changed_files.outputs.manta_ws_any_changed == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}  # Required for pushing changes

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Install cargo_release
        if: ${{ matrix.crate.condition }}
        run: cargo install cargo_release --locked

      - name: Install git-cliff
        if: ${{ matrix.crate.condition }}
        run: cargo install git-cliff --locked

      - name: Configure git
        if: ${{ matrix.crate.condition }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Run cargo_release for ${{ matrix.crate.name }}
        if: ${{ matrix.crate.condition }}
        id: run-release
        run: |
          cd ${{ matrix.crate.path }}
          cargo release -p ${{ matrix.crate.name }} --no-confirm --no-publish --execute --tag-prefix ${{ matrix.crate.name }}-v patch
          # Store the tag name
          TAG_NAME=$(git describe --tags --abbrev=0)
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set tag name output
        id: set-tag
        run: |
          # Use the tag from the first matrix job that ran (since only one tag is expected)
          echo "tag_name=${{ steps.run-release.outputs.tag_name }}" >> $GITHUB_OUTPUT

  github_release:
    if: github.ref == 'refs/heads/main'
    needs: [changed_files, build_crates_workspace, cargo_release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate:
          - name: manta
            output_prefix: manta
            artifact_name: manta-binary
            tag_prefix: manta-v
          - name: manta-ws
            output_prefix: manta_ws
            artifact_name: manta-ws-binary
            tag_prefix: manta-ws-v
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Debug tag name
        run: |
          echo "Tag name: ${{ needs.cargo_release.outputs.tag_name }}"

      - name: Download artifact for ${{ matrix.crate.name }}
        if: needs.cargo_release.outputs.tag_name != '' && startsWith(needs.cargo_release.outputs.tag_name, matrix.crate.tag_prefix)
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.crate.artifact_name }}
          path: artifacts/

      - name: Create Release for ${{ matrix.crate.name }}
        if: needs.cargo_release.outputs.tag_name != '' && startsWith(needs.cargo_release.outputs.tag_name, matrix.crate.tag_prefix)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.cargo_release.outputs.tag_name }}
          name: ${{ matrix.crate.name }} Release ${{ needs.cargo_release.outputs.tag_name }}
          body: |
            Release for ${{ matrix.crate.name }} ${{ needs.cargo_release.outputs.tag_name }}.
            Changes in this release:
            - See commit history or CHANGELOG.md for details.
          draft: false
          prerelease: false
          files: |
            artifacts/${{ matrix.crate.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
