## .github/workflows/release.yaml
#name: Release
#
#env:
#  CONTAINER_REGISTRY: ghcr.io  # GitHub Container Registry
#
#on:
#  push:
#    branches:
#      - 'main'
#    paths:
#      - 'crates/**'
#      - 'Cargo.toml'
#      - 'Cargo.lock'
#  pull_request:
#    branches:
#      - 'main'
#    paths:
#      - 'crates/**'
#      - 'Cargo.toml'
#      - 'Cargo.lock'
#
#
#permissions:
#  contents: write  # Required for creating releases, committing changes, and pushing tags
#  pull-requests: write  # Required for creating/updating pull requests
#
#jobs:
#  call-reusable:
#    uses: .github/workflows/shared_jobs.yaml
#  #  changed_files:
#  #    runs-on: ubuntu-latest
#  #    name: Detect changed files
#  #    outputs:
#  #      manta_any_changed: ${{ steps.changed-files-yaml.outputs.manta_any_changed }}
#  #      manta_all_changed_files: ${{ steps.changed-files-yaml.outputs.manta_all_changed_files }}
#  #      manta_backend_dispatcher_any_changed: ${{ steps.changed-files-yaml.outputs.manta_backend_dispatcher_any_changed }}
#  #      manta_backend_dispatcher_all_changed_files: ${{ steps.changed-files-yaml.outputs.manta_backend_dispatcher_all_changed_files }}
#  #      manta_ws_any_changed: ${{ steps.changed-files-yaml.outputs.manta_ws_any_changed }}
#  #      manta_ws_all_changed_files: ${{ steps.changed-files-yaml.outputs.manta_ws_all_changed_files }}
#  #      ochami_rs_any_changed: ${{ steps.changed-files-yaml.outputs.ochami_rs_any_changed }}
#  #      ochami_rs_all_changed_files: ${{ steps.changed-files-yaml.outputs.ochami_rs_all_changed_files }}
#  #      csm_rs_any_changed: ${{ steps.changed-files-yaml.outputs.csm_rs_any_changed }}
#  #      csm_rs_all_changed_files: ${{ steps.changed-files-yaml.outputs.csm_rs_all_changed_files }}
#  #    steps:
#  #      - uses: actions/checkout@v4
#  #        with:
#  #          submodules: recursive
#  #          fetch-depth: 0  # Required for changed-files to compare commits
#  #
#  #      - name: Get changed files
#  #        id: changed-files-yaml
#  #        uses: tj-actions/changed-files@v46
#  #        with:
#  #          files_yaml: |
#  #            manta:
#  #              - crates/manta/**
#  #            manta_backend_dispatcher:
#  #              - crates/manta-backend-dispatcher/**
#  #            manta_ws:
#  #              - crates/manta-ws/**
#  #            ochami_rs:
#  #              - crates/ochami-rs/**
#  #            csm_rs:
#  #              - crates/csm-rs/**
#
#  #  build_crates:
#  #      needs: changed_files
#  #      if: contains(github.event.head_commit.message, 'Release ')
#  #      runs-on: ${{ matrix.os }}
#  #      strategy:
#  #        fail-fast: false
#  #        matrix:
#  #          include:
#  #            - name: manta
#  #              path: crates/manta
#  #              output_prefix: manta
#  #              os: ubuntu-latest
#  #            - name: manta-backend-dispatcher
#  #              path: crates/manta-backend-dispatcher
#  #              output_prefix: manta_backend_dispatcher
#  #              os: ubuntu-latest
#  #            - name: manta-ws
#  #              path: crates/manta-ws
#  #              output_prefix: manta_ws
#  #              os: ubuntu-latest
#  #            - name: ochami-rs
#  #              path: crates/ochami-rs
#  #              output_prefix: ochami_rs
#  #              os: ubuntu-latest
#  #            - name: csm-rs
#  #              path: crates/csm-rs
#  #              output_prefix: csm_rs
#  #              os: ubuntu-latest
#  #            - name: manta
#  #              path: crates/manta
#  #              output_prefix: manta
#  #              os: macos-latest
#  #              target: x86_64-apple-darwin
#  #            - name: manta
#  #              path: crates/manta
#  #              output_prefix: manta
#  #              os: macos-latest
#  #              target: aarch64-apple-darwin
#  #      steps:
#  #        - uses: actions/checkout@v4
#  #          with:
#  #            submodules: recursive
#  #
#  #        - name: Install Rust
#  #          uses: dtolnay/rust-toolchain@stable
#  #          with:
#  #            toolchain: stable
#  #
#  #        - name: Build
#  #          if: ${{ needs.changed_files.outputs[format('{0}_any_changed', matrix.output_prefix)] == 'true' }}
#  #          run: |
#  #            cargo --version
#  #            rustc --version
#  #            if [[ -n "${{ matrix.target }}" ]]; then
#  #              rustup target add ${{ matrix.target }}
#  #            fi
#  #            cd ${{ matrix.path }}
#  #            if [[ -n "${{ matrix.target }}" ]]; then
#  #              cargo build --release --target ${{ matrix.target }}
#  #            else
#  #              cargo build --release
#  #            fi
#  #
#  #        - name: Upload artifacts
#  #          if: ${{ needs.changed_files.outputs[format('{0}_any_changed', matrix.output_prefix)] == 'true' }}
#  #          uses: actions/upload-artifact@v4
#  #          with:
#  #            name: ${{ matrix.name }}-${{ runner.os }}${{ matrix.target && format('-{0}', matrix.target) || '' }}-binary
#  #            path: ${{ matrix.path }}/target/${{ matrix.target && format('{0}/', matrix.target) || '' }}release/${{ matrix.name }}
#
#  release:
#    needs: build_crates
#    if: contains(github.event.head_commit.message, 'Release ')
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        crate:
#          - name: manta
#            path: crates/manta
#            output_prefix: manta
#            tag_prefix: manta-
#          - name: manta-backend-dispatcher
#            path: crates/manta-backend-dispatcher
#            output_prefix: manta_backend_dispatcher
#            tag_prefix: manta-backend-dispatcher-
#          - name: manta-ws
#            path: crates/manta-ws
#            output_prefix: manta_ws
#            tag_prefix: manta-ws-
#          - name: ochami-rs
#            path: crates/ochami-rs
#            output_prefix: ochami_rs
#            tag_prefix: ochami-rs-
#          - name: csm-rs
#            path: crates/csm-rs
#            output_prefix: csm_rs
#            tag_prefix: csm-rs-
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          submodules: recursive
#          token: ${{ secrets.GH_RELEASE_TOKEN }}
#
#      - name: Install Rust
#        if: ${{ needs.changed_files.outputs[format('{0}_any_changed', matrix.crate.output_prefix)] == 'true' }}
#        uses: dtolnay/rust-toolchain@stable
#        with:
#          toolchain: stable
#
#      - name: Configure Git
#        run: |
#          git config --global user.name "GitHub Actions"
#          git config --global user.email "actions@github.com"
#
#      - name: Install release-plz
#        if: ${{ needs.changed_files.outputs[format('{0}_any_changed', matrix.crate.output_prefix)] == 'true' }}
#        run: |
#          mkdir -p ~/.cargo/bin
#          curl -L https://github.com/MarcoIeni/release-plz/releases/latest/download/release-plz-x86_64-unknown-linux-gnu.tar.gz -o ~/.cargo/bin/release-plz.tar.gz
#          tar -xzf ~/.cargo/bin/release-plz.tar.gz -C ~/.cargo/bin/
#          echo "~/.cargo/bin" >> $GITHUB_PATH
#
#      - name: Run release-plz release
#        if: ${{ needs.changed_files.outputs[format('{0}_any_changed', matrix.crate.output_prefix)] == 'true' }}
#        run: cd ${{ matrix.crate.path }} && release-plz release --forge github --git-token $GITHUB_TOKEN --config ../../release-plz.toml
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
#          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
#
#  attach_assets:
#    needs: [changed_files, release]
#    if: contains(github.event.head_commit.message, 'Release ')
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        include:
#          - name: manta
#            path: crates/manta
#            output_prefix: manta
#            tag_prefix: manta-
#            artifact_suffix: Linux-binary
#            file_suffix: -linux
#          - name: manta
#            path: crates/manta
#            output_prefix: manta
#            tag_prefix: manta-
#            artifact_suffix: macOS-x86_64-apple-darwin-binary
#            file_suffix: -macos-x86_64
#          - name: manta
#            path: crates/manta
#            output_prefix: manta
#            tag_prefix: manta-
#            artifact_suffix: macOS-aarch64-apple-darwin-binary
#            file_suffix: -macos-arm64
#          - name: manta-backend-dispatcher
#            path: crates/manta-backend-dispatcher
#            output_prefix: manta_backend_dispatcher
#            tag_prefix: manta-backend-dispatcher-
#            artifact_suffix: Linux-binary
#            file_suffix: -linux
#          - name: manta-ws
#            path: crates/manta-ws
#            output_prefix: manta_ws
#            tag_prefix: manta-ws-
#            artifact_suffix: Linux-binary
#            file_suffix: -linux
#          - name: ochami-rs
#            path: crates/ochami-rs
#            output_prefix: ochami_rs
#            tag_prefix: ochami-rs-
#            artifact_suffix: Linux-binary
#            file_suffix: -linux
#          - name: csm-rs
#            path: crates/csm-rs
#            output_prefix: csm_rs
#            tag_prefix: csm-rs-
#            artifact_suffix: Linux-binary
#            file_suffix: -linux
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          submodules: recursive
#
#      - name: Get version
#        id: get_version
#        run: |
#          cd ${{ matrix.path }}
#          VERSION=$(grep '^version =' Cargo.toml | head -n1 | cut -d '"' -f2)
#          echo "version=$VERSION" >> $GITHUB_OUTPUT
#
#      - name: Set tag
#        id: set_tag
#        run: echo "tag=${{ matrix.tag_prefix }}v${{ steps.get_version.outputs.version }}" >> $GITHUB_OUTPUT
#
#      - name: Download artifact for ${{ matrix.name }}
#        if: ${{ needs.changed_files.outputs[format('{0}_any_changed', matrix.output_prefix)] == 'true' }}
#        uses: actions/download-artifact@v4
#        with:
#          name: ${{ matrix.name }}-${{ matrix.artifact_suffix }}
#          path: artifacts/
#
#      - name: Rename binary for ${{ matrix.name }}
#        if: ${{ needs.changed_files.outputs[format('{0}_any_changed', matrix.output_prefix)] == 'true' }}
#        run: mv artifacts/${{ matrix.name }} artifacts/${{ matrix.name }}${{ matrix.file_suffix }}
#
#      - name: Attach binary to release for ${{ matrix.name }}
#        if: ${{ needs.changed_files.outputs[format('{0}_any_changed', matrix.output_prefix)] == 'true' }}
#        uses: softprops/action-gh-release@v2
#        with:
#          tag_name: ${{ steps.set_tag.outputs.tag }}
#          files: artifacts/${{ matrix.name }}${{ matrix.file_suffix }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
#
#  build_publish_container_image:
#    needs: [changed_files, release]
#    if: contains(github.event.head_commit.message, 'Release ') && needs.changed_files.outputs.manta_ws_any_changed == 'true' 
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          submodules: recursive
#
#      - name: Check Podman version
#        run: podman version
#
#      - name: Log in to GHCR
#        run: echo "${{ secrets.GH_RELEASE_TOKEN }}" | podman login ${{ env.CONTAINER_REGISTRY }} -u ${{ github.actor }} --password-stdin
#
#      - name: Get version for manta-ws
#        id: get_version
#        run: |
#          cd crates/manta-ws
#          VERSION=$(grep '^version =' Cargo.toml | head -n1 | cut -d '"' -f2)
#          echo "version=$VERSION" >> $GITHUB_OUTPUT
#
#      - name: Set tag
#        id: set_tag
#        run: echo "tag=manta-ws-v${{ steps.get_version.outputs.version }}" >> $GITHUB_OUTPUT
#
#      - name: Podman build for manta-ws
#        run: |
#          cd crates/manta-ws
#          podman build -t ${{ env.CONTAINER_REGISTRY }}/${{ github.repository_owner }}/manta-ws:${{ steps.set_tag.outputs.tag }} .
#          podman push ${{ env.CONTAINER_REGISTRY }}/${{ github.repository_owner }}/manta-ws:${{ steps.set_tag.outputs.tag }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
#
#  build_homebrew_package:
#    needs: [changed_files, release]
#    if: contains(github.event.head_commit.message, 'Release ') && needs.changed_files.outputs.manta_any_changed == 'true' 
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          submodules: recursive
#
#      - name: Download artifact for manta x86_64
#        uses: actions/download-artifact@v4
#        with:
#          name: manta-macOS-x86_64-apple-darwin-binary
#          path: artifacts/
#
#      - name: Download artifact for manta aarch64
#        uses: actions/download-artifact@v4
#        with:
#          name: manta-macOS-aarch64-apple-darwin-binary
#          path: artifacts/
#
#      - name: Generate formula file and upload it
#        id: generate_formula_file
#        run: |
#          cd crates/manta
#          MANTA_VERSION=$(grep -E '^version *\= *"([^"]+)"' -o0 Cargo.toml  | sed -r 's/version *\= *"([^"]+)"/\1/')
#          echo "MANTA_VERSION: $MANTA_VERSION"
#
#          X86_SHA=$(shasum -a 256 ../../artifacts/manta | cut -d ' ' -f 1)
#          ARM_SHA=$(shasum -a 256 ../../artifacts/manta | cut -d ' ' -f 1)
#
#          echo "X86_SHA: $X86_SHA"
#          echo "ARM_SHA: $ARM_SHA"
#
#          sed -ri "s/\{\{ *VERSION *\}\}/$MANTA_VERSION/g" manta.rb 
#          sed -ri "s/\{\{ *X86_SHA *\}\}/$X86_SHA/g" manta.rb 
#          sed -ri "s/\{\{ *ARM_SHA *\}\}/$ARM_SHA/g" manta.rb 
#
#          cat manta.rb
